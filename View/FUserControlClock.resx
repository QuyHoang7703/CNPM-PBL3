<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButGioHang.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>