<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButGioHang.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>